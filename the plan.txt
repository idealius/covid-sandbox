I. Segment Curves by positive angle into: peaks, roots
	1) Peaks: middle-to-left highest point
	2) roots: 
		A) if first curve, first non-zero y
		B) Check 45 degree angle from peak to last and next midpoints: if > midpoint use it, otherwise use midpoint of last and next curve
		C) if end curve, midpoint of last curve, no second root
II. fminsearch instead of using SSQ, use ssq between each point: peak and roots
	*initial values can be based on continuum function to see if less iterations are needed
	1) Will require:
		A) functions to find/look up peak and roots for original/old parms
		B) function to find/look up peak and roots for new parms
		*using newton's method, need first guess to start between new peak and older roots
			i. function to measure distances between each, add them up and compare
			ii. repeat to certain iteration
			iii. store curve segments
	*will need additional Options added for accessing peak / curves
III. Sum curve fminsearch:
	1) Put sum function with all segments through fminsearch
	2) check each segment function that roots do not change too much, instead peaks should be lowered to adjust.
	
More details about II and III:

II.

do fminsearch with constraints around roots and peak to a certain precision, assume special attention for the right root as it tends to extend very far with minimal positive value before reaching 0.

constrain 2*10^28 for coefficients <- maybe not

give parameters for top +/- as a constraint based on original top value <- needs more playing in desmos, and checking total segment slope angle values in practice

This is done strictly per segment first go around

(changing top is the only way to ensure roots and peaks are adhered to.)

main concern here is square shapes, given the variety of shapes which can be created with the core function, it might make sense to just check that the slope stays away from 90 degree angles.

scale may need to be passed to result in more apt ssq


III.

peak of resultant curve should be constrained from going over the peak from the segment, but may go below up to a certain threshold. top itself, can go above the peak to a certain threshold (say *.9 to *1.5)
roots should be constrained to a certain threshold
widen constraints of coefficients to 2*10^x to 2*10^y for more varied curve shapes

do fminsearch across entire curve with sum of segments, which must pass peak/root checker first for each segment. and also pass "no close to 90 degree slopes"

display resultant sum curve
display segment curves
output sum curve in console
output segment curves in console

better regression might be to segment the dataset in halves and perform regression on each half and not just take the best regression parameter, but take the one that has the best 


scale may need to be passed to result in more apt ssq

		
https://stats.stackexchange.com/questions/72047/when-fitting-a-curve-how-do-i-calculate-the-95-confidence-interval-for-my-fitt